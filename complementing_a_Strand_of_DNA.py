str = 'AAAACCCGGT'

char = list(str)

for base in char:
	if base == 'A':
		print "yes";
		base = 'base'.replace('A', 'T');
	if base == 'T':
		base = 'A';
	if base == 'G':
		base = 'C';
	if base == 'C':
		base = 'G';


print char

##

def rc (my_sequence):
    my_dictionary = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}
    return "".join([my_dictionary[base] for base in reversed(my_sequence)])


print rc("CCCCGATCTTTACAGTTGGTTTCTGTTTTAAGACCCTCGCACCGTTGAGTTCGCCGCGGTGGTGGATACGAACAGCTTTCCATTCACGTGATGATATTCTGGGGATTATGCGTCCGACACCGATGATTGAGGCGGCTCGCAACCCGCCGGACCGTACCTCAATAAGTCAGCTTATGAAGAATGCAAGCGCGACGAGCTGCGGATAGGTTCAAGTTCATCTAGGCGTAAGTTTTTCGCCCTCGTTAAAAGGGATCTATTCGAGCTTGACTTTGATAACAACGCCGTACATTTGCCGTTTACGAGGCACTTGGGCATGTGGGGACTGATGTGTTATCAAAGGGGCCGTCATCTCCAATCCCACGCTGCTATCATGCCGGTTATTACGGACTTGGATCTTGAGATAGCCTGGTACTCGCGCTACCTACCCATTCTGTCCAATTGAATGCCCGCACAAACTGCCTACTAGAGGCAGTGCCCACCTTCAGCAATAATATCAATTAACGGGCTTTCATGAATGGTTATTATTAGCACGAAAGACATAACGGCCGTAACGGTTGTCAAGCCTACTGTGGATGCCACTGGTGAGAAAGCCCTTTCGCAGGAGTCAAAGCAATAGTAGTGCTCTGCACAGTTGCTTCATAGTGTGTCATGAAGGAACCTGCTTAGATTCGCTCACCTCAAATCATCAACGGTTTGCGATCAGGTGCTAAGTGTCTGGACTGTGAAGAATCCCATAAGGGTAGGCGTTGCAATCCTACTCAGTGAGCGAGAACTCACTCGATCCCCCTAACTTTCTTAGAGTCGCCTCTCTGTCTTCCACTAATCGACTTGGCATTCCCCTGAACGAATCGTGGTCCGACCTTAGGACTCTACCTTAGTAAACCCTGCCCACTCCGCCACACGCGGTAATTAAGGTAGAAGCCTTGCGAGCCCTCACAGCGCTGTACAT")



###




seq = 'CCCCGATCTTTACAGTTGGTTTCTGTTTTAAGACCC'
my_dictionary = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}
temp = "".join([my_dictionary[base] for base in reversed(seq)])
print [my_dictionary[base] for base in seq]
print temp